#include <ThingerESP32.h>
#include <DallasTemperature.h>
#include <ThingerWifi.h>
#define USERNAME "Shubham_Shende"
#define DEVICE_ID "ESP32"
#define DEVICE_CREDENTIAL "c?Zk7Co%duTJ"
#define ONE_WIRE_BUS 2      //D4
#define TRIGGER_PIN  12     //D12
#define ECHO_PIN     13     //D13
#define SSID "Wireless Hub"
#define SSID_PASSWORD "3;P*Th3s^TqT"

OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);
ThingerESP32 thing(USERNAME, DEVICE_ID, DEVICE_CREDENTIAL);


void setup() {
  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(TRIGGER_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT); 
  thing.add_wifi(SSID, SSID_PASSWORD);
  
  thing["SONIC"] >> [] (pson& out){
      double duration, distance;
      digitalWrite(TRIGGER_PIN, LOW);  // Get Start
      delayMicroseconds(2); // stable the line 
      digitalWrite(TRIGGER_PIN, HIGH); // sending 10 us pulse
      delayMicroseconds(10); // delay 
      digitalWrite(TRIGGER_PIN, LOW); // after sending pulse wating to receive signals 
      duration = pulseIn(ECHO_PIN, HIGH); // calculating time 
      distance = (duration/2) / 29.1; // single path 
      out = distance;
      thing["Temperature"] >> [](pson & out) {
      sensors.requestTemperaturesByIndex(0);
      out = (int) sensors.getTempCByIndex(0);
      };
      };

  // digital pin control example (i.e. turning on/off a light, a relay, configuring a parameter, etc)
  thing["led"] << digitalPin(LED_BUILTIN);

  // resource output example (i.e. reading a sensor value)
  thing["millis"] >> outputValue(millis());
      sensors.begin();
    
}

void loop() {
  thing.handle();
}
